linguagens_programacao = ['Python', 'JavaScript', 'Java', 'PHP', 'R', 'VBA', 'Assembly', 'C']

print('imprimindo a lista inicial')
print(linguagens_programacao)
print('\n')
print("Imprimindo o primeiro e último item da lista:", linguagens_programacao[0], "e", linguagens_programacao[-1])
print('\n')
print(f"Modificando o último item de {linguagens_programacao[-1]} para C++:")
linguagens_programacao[-1] = 'C++'
print("imprimindo toda a lista alterada:")
print(linguagens_programacao)
print('\n')
print('Adicionando novamente a linguagem C ao final da lista:')
linguagens_programacao.append("C")
print("Imprimindo a lista atualizada:")
print(linguagens_programacao)
print('\n')
print("Inserindo a linguagem TypeScript após o JavaScript:")
linguagens_programacao.insert(2, "TypeScript")
print("Imprimindo a lista atualizada:")
print(linguagens_programacao)
print('\n')
print('Excluindo o TypeScript que não é uma linguagem de programação:')
del linguagens_programacao[2]
print("Imprimindo a lista atualizada:")
print(linguagens_programacao)
print('\n')
print('Removendo a linguagem C e adicionando antes do C++')
linguagem_c = linguagens_programacao.pop()
linguagens_programacao.insert(7, linguagem_c)
print("Imprimindo a lista atualizada:")
print(linguagens_programacao)
print('\n')
print("Removendo a linguagem Assembly:")
assembly = "Assembly"
linguagens_programacao.remove(assembly)
print("Imprimindo a lista atualizada:")
print(linguagens_programacao)
print('\n')
print("Ordenando em por ordem alfabética ascendente e descendente. Salvando a lista original sem alteração")
linguagens_programacao_copia = linguagens_programacao.copy()
linguagens_programacao_copia.sort()
print(f"Ordem alfabética ascendente:{linguagens_programacao_copia}")
print(f"lista original: {linguagens_programacao}")
print('\n')
linguagens_programacao_copia.sort(reverse=True)
print(f"Ordem alfabética descendente:\n{linguagens_programacao_copia}")
print(f"lista original: {linguagens_programacao}")
print('\n')
print("Retornando com a lista antes da classificação alfabética:")
print(linguagens_programacao)
print('\n')
print("Imprimindo a lista em ordem alfabética sem alterar a lista original:")
print(f'Ascendente: {sorted(linguagens_programacao)}')
print(f'Descendente: {sorted(linguagens_programacao, reverse=True)}')
print(f'Original: {linguagens_programacao}')
print('\n')
linguagens_programacao.reverse()
print(f"Revertendo a lista original: {linguagens_programacao}")
linguagens_programacao.reverse()
print(f"Revertendo novamente a lista original: {linguagens_programacao}")
print('\n')
print(f"Imprimindo o tamanho da lista: {len(linguagens_programacao)}")